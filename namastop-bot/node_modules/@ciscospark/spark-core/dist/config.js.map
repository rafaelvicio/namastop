{"version":3,"sources":["config.js"],"names":["IDBROKER_BASE_URL","process","env","maxAppLevelRedirects","maxLocusRedirects","maxAuthenticationReplays","maxReconnectAttempts","onBeforeLogout","trackingIdPrefix","trackingIdSuffix","AlternateLogger","undefined","credentials","authorizationString","CISCOSPARK_AUTHORIZATION_STRING","AUTHORIZATION_STRING","authorizeUrl","AUTHORIZE_URL","tokenUrl","TOKEN_URL","revokeUrl","REVOKE_URL","logoutUrl","client_id","CISCOSPARK_CLIENT_ID","COMMON_IDENTITY_CLIENT_ID","CLIENT_ID","client_secret","CISCOSPARK_CLIENT_SECRET","COMMON_IDENTITY_CLIENT_SECRET","CLIENT_SECRET","redirect_uri","CISCOSPARK_REDIRECT_URI","COMMON_IDENTITY_REDIRECT_URI","REDIRECT_URI","scope","CISCOSPARK_SCOPE","CISCOSPARK_SCOPES","COMMON_IDENTITY_SCOPE","SCOPE","cisService","device","preDiscoveryServices","hydraServiceUrl","HYDRA_SERVICE_URL","whitelistedServiceDomains","payloadTransformer","predicates","transforms","storage","boundedAdapter","MemoryStoreAdapter","unboundedAdapter"],"mappings":";;;;;;AAMA;;AAEA,IAAMA,oBAAoBC,QAAQC,GAAR,CAAYF,iBAAZ,IAAiC,4BAA3D,C,CARA;;;;AAIA;;kBAMe;AACbG,wBAAsB,EADT;AAEbC,qBAAmB,CAFN;AAGbC,4BAA0B,CAHb;AAIbC,wBAAsB,CAJT;AAKbC,kBAAgB,EALH;AAMbC,oBAAkB,cANL;AAObC,oBAAkB,EAPL;AAQbC,mBAAiBC,SARJ;AASbC,eAAa;AACX;;;;;AAKAC,yBAAqBZ,QAAQC,GAAR,CAAYY,+BAAZ,IAA+Cb,QAAQC,GAAR,CAAYa,oBANrE;AAOX;;;;;AAKAC,kBAAcf,QAAQC,GAAR,CAAYe,aAAZ,IAAgCjB,iBAAhC,6BAZH;AAaX;AACA;;;;AAIAkB,cAAUjB,QAAQC,GAAR,CAAYiB,SAAZ,IAA4BnB,iBAA5B,gCAlBC;AAmBXoB,eAAWnB,QAAQC,GAAR,CAAYmB,UAAZ,IAA6BrB,iBAA7B,0BAnBA;AAoBX;;;;AAIAsB,eAActB,iBAAd,0BAxBW;AAyBX;;;;AAIAuB,eAAWtB,QAAQC,GAAR,CAAYsB,oBAAZ,IAAoCvB,QAAQC,GAAR,CAAYuB,yBAAhD,IAA6ExB,QAAQC,GAAR,CAAYwB,SA7BzF;AA8BX;;;;AAIAC,mBAAe1B,QAAQC,GAAR,CAAY0B,wBAAZ,IAAwC3B,QAAQC,GAAR,CAAY2B,6BAApD,IAAqF5B,QAAQC,GAAR,CAAY4B,aAlCrG;AAmCX;;;;AAIAC,kBAAc9B,QAAQC,GAAR,CAAY8B,uBAAZ,IAAuC/B,QAAQC,GAAR,CAAY+B,4BAAnD,IAAmFhC,QAAQC,GAAR,CAAYgC,YAvClG;AAwCX;;;;AAIAC,WAAOlC,QAAQC,GAAR,CAAYkC,gBAAZ,IAAgCnC,QAAQC,GAAR,CAAYmC,iBAA5C,IAAiEpC,QAAQC,GAAR,CAAYoC,qBAA7E,IAAsGrC,QAAQC,GAAR,CAAYqC,KA5C9G;AA6CX;;;;;AAKAC,gBAAY;AAlDD,GATA;AA6DbC,UAAQ;AACNC,0BAAsB;AACpBC,uBAAiB1C,QAAQC,GAAR,CAAY0C,iBAAZ,IAAiC;AAD9B,KADhB;AAIN;AACAC,+BAA2B,CACzB,UADyB,EAEzB,gBAFyB,EAGzB,WAHyB;AALrB,GA7DK;AAwEbC,sBAAoB;AAClBC,gBAAY,EADM;AAElBC,gBAAY;AAFM,GAxEP;AA4EbC,WAAS;AACPC,oBAAgBC,2BADT;AAEPC,sBAAkBD;AAFX;AA5EI,C","file":"config.js","sourcesContent":["/*!\n * Copyright (c) 2015-2017 Cisco Systems, Inc. See LICENSE file.\n */\n\n/* eslint camelcase: [0] */\n\nimport {MemoryStoreAdapter} from './lib/storage';\n\nconst IDBROKER_BASE_URL = process.env.IDBROKER_BASE_URL || 'https://idbroker.webex.com';\n\nexport default {\n  maxAppLevelRedirects: 10,\n  maxLocusRedirects: 5,\n  maxAuthenticationReplays: 1,\n  maxReconnectAttempts: 1,\n  onBeforeLogout: [],\n  trackingIdPrefix: 'spark-js-sdk',\n  trackingIdSuffix: '',\n  AlternateLogger: undefined,\n  credentials: {\n    /**\n     * This is the authorization url displayed on the\n     * {@link developer portal|https://developer.ciscospark.com}\n     * @type {string}\n     */\n    authorizationString: process.env.CISCOSPARK_AUTHORIZATION_STRING || process.env.AUTHORIZATION_STRING,\n    /**\n     * Authorization URL which prompts for user's password. Inferred from\n     * {@link config.credentials.authorizationString}\n     * @type {string}\n     */\n    authorizeUrl: process.env.AUTHORIZE_URL || `${IDBROKER_BASE_URL}/idb/oauth2/v1/authorize`,\n    // TODO does hydra also have an access_token endpoint?\n    /**\n     * Token URL used for token refresh and auth code exchange\n     * @type {string}\n     */\n    tokenUrl: process.env.TOKEN_URL || `${IDBROKER_BASE_URL}/idb/oauth2/v1/access_token`,\n    revokeUrl: process.env.REVOKE_URL || `${IDBROKER_BASE_URL}/idb/oauth2/v1/revoke`,\n    /**\n     * URL to load when the app logs out\n     * @type {string}\n     */\n    logoutUrl: `${IDBROKER_BASE_URL}/idb/oauth2/v1/logout`,\n    /**\n     * {@see https://tools.ietf.org/html/rfc6749#section-4.1.4}\n     * @type {string}\n     */\n    client_id: process.env.CISCOSPARK_CLIENT_ID || process.env.COMMON_IDENTITY_CLIENT_ID || process.env.CLIENT_ID,\n    /**\n     * {@see https://tools.ietf.org/html/rfc6749#section-4.1.4}\n     * @type {string}\n     */\n    client_secret: process.env.CISCOSPARK_CLIENT_SECRET || process.env.COMMON_IDENTITY_CLIENT_SECRET || process.env.CLIENT_SECRET,\n    /**\n     * {@see https://tools.ietf.org/html/rfc6749#section-4.1.4}\n     * @type {string}\n     */\n    redirect_uri: process.env.CISCOSPARK_REDIRECT_URI || process.env.COMMON_IDENTITY_REDIRECT_URI || process.env.REDIRECT_URI,\n    /**\n     * {@see https://tools.ietf.org/html/rfc6749#section-4.1.4}\n     * @type {string}\n     */\n    scope: process.env.CISCOSPARK_SCOPE || process.env.CISCOSPARK_SCOPES || process.env.COMMON_IDENTITY_SCOPE || process.env.SCOPE,\n    /**\n     * Controls the UI of the CI login page.\n     * @private\n     * @type {string}\n     */\n    cisService: 'spark'\n  },\n  device: {\n    preDiscoveryServices: {\n      hydraServiceUrl: process.env.HYDRA_SERVICE_URL || 'https://api.ciscospark.com/v1'\n    },\n    // It is okay to pass the auth token to the following domains:\n    whitelistedServiceDomains: [\n      'wbx2.com',\n      'ciscospark.com',\n      'webex.com'\n    ]\n  },\n  payloadTransformer: {\n    predicates: [],\n    transforms: []\n  },\n  storage: {\n    boundedAdapter: MemoryStoreAdapter,\n    unboundedAdapter: MemoryStoreAdapter\n  }\n};\n"]}